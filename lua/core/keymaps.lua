local utils = require("util")
local keymap = utils.keymap
local feedkeys = utils.feedkeys

keymap("<C-/>", "gcc", { remap = true, silent = true, desc = "Comment toggle" }, "n")
keymap("<C-/>", "gc", { remap = true, silent = true, desc = "Comment toggle" }, "v")
keymap("<leader>e", "<cmd>Neotree toggle<cr>", "Explorer")
keymap("<C-p>", function()
    require("fzf-lua").files({ fzf_opts = { ["--layout"] = "reverse-list" } })
end, "Fzf Files Finder")
keymap("<leader>o", function()
    require("fzf-lua").oldfiles({ cwd_only = true, fzf_opts = { ["--layout"] = "reverse-list" } })
end, "Fzf Oldfiles")
keymap("<C-f>", function()
    require("fzf-lua").live_grep({ winopts = { width = 1.0 }, fzf_opts = { ["--layout"] = "reverse-list" } })
end, "Fzf Live Grep")
keymap("<leader><space>", function()
    require("fzf-lua").buffers({ fzf_opts = { ["--layout"] = "reverse-list" } })
end, "Fzf buffers")
keymap("<C-k>", "<C-w>k", "Focus up split")
keymap("<C-l>", "<C-w>l", "Focus left split")
keymap("<C-j>", "<C-w>j", "Focus down split")
keymap("<C-h>", "<C-w>h", "Focus right split")
keymap("<A-h>", "<C-w><", "Resize <")
keymap("<A-l>", "<C-w>>", "Resize >")
keymap("<A-j>", "<C-w>-", "Resize -")
keymap("<A-k>", "<C-w>+", "Resize +")
keymap("<A-=>", "<C-w>=", "Reset splits sizes")
keymap("<leader>v", "<C-w>v<C-w>l", "New vertical split")
keymap("<leader>h", "<C-w>s<C-w>j", "New horizontal split")
keymap("<Esc>", "<cmd>noh<cr>", "Clear search highlights", "n")
-- keymap("<C-d>", "<C-d>zz", "Better scroll down")
-- keymap("<C-u>", "<C-u>zz", "Better scroll up")
keymap("n", "nzz", "Better jump next", "n")
keymap("]d", function()
    vim.diagnostic.goto_next()
    feedkeys("zz")
end, { desc = "Better jump next diagnostic", remap = true }, "n")
keymap("[d", function()
    vim.diagnostic.goto_prev()
    feedkeys("zz")
end, { desc = "Better jump prev diagnostic", remap = true }, "n")
keymap("J", ":m '>+1<CR>gv=gv", "Move line down", "v")
keymap("K", ":m '<-2<CR>gv=gv", "Move line up", "v")
keymap("<", "<gv", "Keep selection when indenting multiple lines", "v")
keymap(">", ">gv", "Keep selection when indenting multiple lines", "v")
keymap("J", ":m '>+1<CR>gv=gv", "Move line down", "v")
keymap("K", ":m '<-2<CR>gv=gv", "Move line up", "v")
keymap("gd", vim.lsp.buf.definition, "LSP: Goto definition", "n")
keymap("gr", vim.lsp.buf.references, "LSP: Goto definition", "n")
keymap("<leader>lr", vim.lsp.buf.rename, "LSP: Goto definition", "n")
keymap("<leader>la", "<cmd>Fzf lsp_code_actions<cr>", "LSP: Code actions")
keymap("<leader>ls", vim.lsp.buf.signature_help, "LSP: Signature help")
keymap("<C-s>", vim.lsp.buf.signature_help, "LSP: Signature help", "i")
keymap("K", vim.lsp.buf.hover, "LSP: Show hover message", "n")
keymap("<leader>df", vim.diagnostic.open_float, "LSP: Show diagnostic message", "n")
keymap("<leader>dl", vim.diagnostic.setqflist, "LSP: List diagnostics", "n")
keymap("<F1>", function()
    feedkeys(":SplitrunNew ")
end, "Splitrun")
keymap("<leader>tt", function()
    local bufname = vim.fn.bufname(vim.fn.winbufnr(0))
    if bufname:match("zsh$") then
        return
    end
    feedkeys("<cmd>tabnew<cr>")
    vim.defer_fn(function()
        if not utils.select_zsh_buffer() then
            feedkeys("<cmd>terminal<cr><cmd>keepalt file zsh<cr>")
        end
    end, 1)
end, "Open terminal in a new tab")
keymap("<leader>th", function()
    local bufname = vim.fn.bufname(vim.fn.winbufnr(0))
    if bufname:match("zsh$") then
        return
    end

    feedkeys("<C-w>s<C-w>j")
    feedkeys("10<C-w>-")
    vim.defer_fn(function()
        if not utils.select_zsh_buffer() then
            feedkeys("<cmd>terminal<cr><cmd>keepalt file zsh<cr>")
        end
    end, 1)
end, "Open terminal in a horizontal split", "n")
keymap("<leader>tv", function()
    local bufname = vim.fn.bufname(vim.fn.winbufnr(0))
    if bufname:match("zsh$") then
        return
    end
    feedkeys("<C-w>v<C-w>l")
    feedkeys("20<C-w><")
    vim.defer_fn(function()
        if not utils.select_zsh_buffer() then
            feedkeys("<cmd>terminal<cr><cmd>keepalt file zsh<cr>")
        end
    end, 1)
end, "Open terminal in a vertical split", "n")
keymap("<leader>tn", "<cmd>tabnew<cr>", "Open new tab")
keymap("<Esc>", "<C-\\><C-n>", "Terminal mode easy exit", "t")
keymap("<M-]>", "<cmd>tabnext<cr>", "Tab next")
keymap("<M-[>", "<cmd>tabprevious<cr>", "Tab previous")
keymap("<C-g>", "<cmd>LazyGit<cr>", "Lazygit")
keymap("<leader>w", [[yiw/<C-r>"<CR><C-o>]], "Search buffer with word under cursor", "n")
keymap("<leader>r", "<cmd>QueryReplace<cr>", "Query replace")
keymap("<leader>S", "<cmd>Spectre<cr>", "Project search & replace")
keymap("<leader>T", "<cmd>FzfLua awesome_colorschemes<cr>", "Theme selector")
keymap("R", "<cmd>LspRestart<cr>", "LSP: Restart language server")
keymap("<leader>lf", function()
    require("conform").format({ async = true, lsp_fallback = true })
end, "LSP: Format buffer")
keymap("yig", ":%y<CR>", "Yank buffer", "n")
keymap("vig", "ggVG", "Visual select buffer", "n")
keymap("cig", ":%d<CR>i", "Change buffer", "n")
keymap("zR", require("ufo").openAllFolds, "Open all folds","n")
keymap("zM", require("ufo").closeAllFolds, "Close all folds","n")
